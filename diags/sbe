#!/bin/bash
##############################################################################
# Copyright (c) 2010, Lawrence Livermore National Security, LLC.
# Produced at the Lawrence Livermore National Laboratory.
# Written by Jim Garlick <garlick@llnl.gov>.
# LLNL-CODE-461827
# All rights reserved.
# 
# This file is part of nodediag.
# For details, see http://code.google.com/p/nodediag.
# Please also read the files DISCLAIMER and COPYING supplied with nodediag.
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License (as published by the
# Free Software Foundation) version 2, dated June 1991.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the IMPLIED WARRANTY OF
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# terms and conditions of the GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
##############################################################################
#
# description: Check Single Bit Memory Error Count
#

PATH=/sbin:/bin:/usr/sbin:/usr/bin

declare -r prog=${0##*/}
declare -r description="Check Single Bit Memory Error Count" 
declare -r sanity=1

# Source nodediag config and function library
. /etc/nodediag.d/functions || exit 2
. /etc/sysconfig/nodediag 

diagconfig ()
{
    if edac-util -s >/dev/null; then
        echo "DIAG_SBE_COUNT=\"500\""
    else
        return 1
    fi
}

getsbecount ()
{
    local errors
    local total=0

    # one line per memory controller: "%s: %s: %s: %u Corrected Errors"
    for errors in $(edac-util|awk '/Corrected Errors$/ {print $4}'); do
        total=$(($total+$errors))
    done
    echo $total
}

diag_init
diag_handle_args "$@"
diag_check_defined "DIAG_SBE_COUNT"

EXITVAL=0

count=$(getsbecount)
if [ $count -gt ${DIAG_SBE_COUNT} ]; then
    echo "$prog: SBE count of $count is too many, allowed only ${DIAG_SBE_COUNT}" >&2
    EXITVAL=$EXIT_FAIL
else
    echo "$prog: SBE count is $count" >&2
fi

exit $EXITVAL
