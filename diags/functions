#!/bin/bash
##############################################################################
# Copyright (c) 2010, Lawrence Livermore National Security, LLC.
# Produced at the Lawrence Livermore National Laboratory.
# Written by Jim Garlick <garlick@llnl.gov>.
# LLNL-CODE-461827
# All rights reserved.
# 
# This file is part of nodediag.
# For details, see http://code.google.com/p/nodediag.
# Please also read the files DISCLAIMER and COPYING supplied with nodediag.
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 2, or (at your option) any later
# version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the IMPLIED WARRANTY OF
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# terms and conditions of the GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
##############################################################################

# Functions for deprecated non-TAP tests.
# This file will be removed at some point.

declare -r EXIT_OK=0
declare -r EXIT_FAIL=1
declare -r EXIT_NOTRUN=2

# Usage: diag_init
# Check that global variables are set
diag_init()
{
  if [ -z "$prog" ]; then
    echo "script did not set \$prog" >&2
    exit $EXIT_NOTRUN
  fi
  if [ -z "$description" ]; then
    echo "$prog: script did not set \$description" >&2
    exit $EXIT_NOTRUN
  fi
}

# Usage: diag_handle_args "$@"
# Handle standard test arguments.
diag_handle_args()
{
  local sopt=0

  while getopts "?hdcs" opt; do
    case ${opt} in
      d) printf "%-16s %s\n" "$prog:" "$description"
         exit $EXIT_NOTRUN
         ;;
      c) echo "#"
         if ! diagconfig 2>/dev/null; then
           echo "# $prog: no default available"
         fi
         exit $EXIT_NOTRUN
         ;;
      s) if [ "$sanity" != "1" ]; then
           echo "$prog: not a --sanity test" >&2
           exit $EXIT_NOTRUN
         fi
         ;;
      *) echo "Usage: $prog [-dc]"
         exit $EXIT_NOTRUN
         ;;
    esac
  done
}

# Usage: diag_check_defined VARIABLE
# If VARIABLE is not defined, exit with NOTRUN.
diag_check_defined()
{
  if ! eval 'test -n "$'$1'"'; then
    echo "$prog: $1 is not set" 
    exit $EXIT_NOTRUN
  fi
}

# Usage: diag_check_root
# If user is not root, exit with NOTRUN.
diag_check_root()
{
  if [ $(id -u) -ne 0 ]; then
    echo "$prog: skipping this test as you are not root" >&2
    exit $EXIT_NOTRUN
  fi
}
